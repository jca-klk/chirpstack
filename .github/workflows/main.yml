name: CI
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:

env:
  CARGO_INCREMENTAL: 0

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database:
          - postgres
          - sqlite
    env:
      DATABASE: ${{ matrix.database }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
      -
        name: Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ matrix.database }}-${{ hashFiles('**/Cargo.lock') }}
      -
        name: Start dependency services
        run: docker compose up -d
      -
        name: Build UI
        run: nix-shell --command "make build-ui"
      -
        name: Run tests
        run: nix-shell --command "make test"

  dist:
    needs: tests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        database:
          - postgres
          - sqlite
    env:
      DATABASE: ${{ matrix.database }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
      -
        name: Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-dist-${{ hashFiles('**/Cargo.lock') }}
      -
        name: Build UI
        run: nix-shell --command "make build-ui"
      -
        name: Install dev dependencies
        run: nix-shell --command "make dev-dependencies"
      -
        name: Build distributables
        run: nix-shell --command "make dist"
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      -
        name: Upload binaries to S3
        run: |
          aws s3 sync dist s3://chirpstack-build
        if: startsWith(github.ref, 'refs/tags/v')
